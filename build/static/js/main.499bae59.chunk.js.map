{"version":3,"sources":["components/Common/Header.js","components/Search/ResultRow.js","actions/searchAction.js","constants/commonConstants.js","components/Search/ResultDetailView.js","Utility.js","components/Search/SearchResult.js","components/Search/SearchBar.js","components/Common/SelectDropdown.js","components/Search/AdvanceFilter.js","actions/filterAction.js","components/Common/Checkbox.js","components/Common/RadioButton.js","components/Search/BasicFilter.js","components/Search/FilterContainer.js","actions/commonAction.js","components/Search/SearchHeader.js","components/Search/SearchContainer.js","components/Dashboard.js","Home.js","App.js","serviceWorker.js","api/restApi.js","api/api.js","sagas/commonSaga.js","sagas/searchSaga.js","store/saga.js","constants/constants.js","reducers/commonReducer.js","reducers/filterReducer.js","reducers/searchReducer.js","reducers/detailViewReducer.js","reducers/downloadReducer.js","store/reducer.js","store/index.js","index.js","assets/images/reuters_connect_logo.svg"],"names":["Header","className","href","alt","src","logo","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","ResultRow","props","onClick","showDetailView","moment","data","firstcreated","format","version","slug","headline","language","destination","join","getSingleRecord","payload","ResultDetailView","switchJsonFormat","e","pretty","preventDefault","setState","state","jsonPrettyFormat","recordId","resultData","this","result","jsonData","singleResult","docs","_source","fileData","encodeURIComponent","JSON","stringify","fileName","split","toLowerCase","closeDetailView","download","undefined","Component","connect","singleRecord","dispatch","numberWithCommas","num","toString","replace","SearchResult","calculatePercentage","fetchedCount","totalCount","toFixed","index","shiftToTop","document","body","scrolltop","documentElement","scrollTop","isItemOpened","showModalView","getElementById","value","isModalOpened","toggle","isSaveChanges","showSaveChangesNote","email","length","clickedOnExport","setTimeout","fromFilter","titleOrderBy","dateOrderBy","langOrderBy","dataSet","position","topPosition","k","push","splice","key","orderBy","con","get","console","log","sort","map","obj","_id","role","aria-labelledby","aria-hidden","name","placeholder","SearchBar","SelectDropdown","Fragment","isMulti","isMultiSelect","dropdownName","styles","dropdownIndicator","display","isClearable","selectedValues","options","classNamePrefix","isSearchable","onChange","onOptionSelect","AdvanceFilter","mapToGenericKeyValuePair","languageOptions","common","languages","lang","language_code","label","destinationOptions","destinations","channelOptions","channel","topicCodesOptions","topicCodes","primary_N2000_code","primary_eikon_news_mnemonic","selectedLanguages","onLanguageSelect","selectedChannels","onChannelSelect","selectedTopicCodes","onTopiCodeSelect","selectedDestinations","onDestinationSelect","isOpenedFromFilterOption","showHideAdvanceFilter","setFilters","Checkbox","checked","checkBoxHandler","htmlFor","RadioButton","disabled","radioButtonHandler","BasicFilter","res","showTimeSelect","timeFormat","dateFormat","showMonthDropdown","showYearDropdown","dropdownMode","placeholderText","selected","startDate","date","minDate","maxDate","onStartDateChangeHandler","endDate","onEndDateChangeHandler","sampleCount","onSampleCountChangeHandler","selectedSampleCount","mediaTypes","onMediaTypeChangeHandler","selectedMediaType","includes","searchClickHandler","FilterContainer","filter","SampleCount","target","MediaType","item","isChecked","checkedItems","set","prevState","selectedMediaTypes","i","showAdvanceFilter","selectedOptions","onSampleCountSelect","selectedValue","renderFilterForHomepage","showHideFilterOption","showFilters","renderFilterForFilterOption","Map","showBasicFilter","getLanguages","getTopicCodes","getDestinations","getChannel","bind","filterActions","SearchHeader","Promise","clickOnDownloadLink","then","window","location","downloadLink","link","closeModal","showHideFilter","createElement","appendChild","click","SearchContainer","getFilterPayload","filters","from","to","size","isSearchClicked","getSearchResult","getDownloadLink","exportData","fromfilter","renderWelcomeScreen","loaderState","selectedSampleArr","searchResult","Dashboard","Home","exact","path","component","render","App","Boolean","hostname","match","url","resolve","reject","a","async","axios","response","post","create","baseURL","rej","restAPI","languageData","channelData","topicCodeData","fetchSearchResult","fetchSingleRecord","downloadSample","commonSaga","apiService","status_code","put","takeEvery","searchSaga","rootSaga","all","call","initialState","timeOptions","commonReducer","action","Date","filterReducer","searchReducer","detailViewReducer","downloadReducer","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","reducer","applyMiddleware","run","ReactDOM","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.499bae59.chunk.js","sourcesContent":["import React from 'react';\nimport logo from \"./../../assets/images/reuters_connect_logo.svg\"\nconst Header = () => {\n    return (\n        <nav className=\"headerWrap navbar navbar-expand-lg navbar-dark\">\n          <a className=\"navbar-brand\" href=\"/\"><img alt=\"\" src={logo} /></a>\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item active\">\n                <a className=\"nav-link\" href=\"/\">Discover</a>\n              </li>\n            </ul>\n          </div>\n        </nav>\n    );\n}\n\nexport default Header;","import React from \"react\";\n\nimport moment from \"moment\";\n\nconst ResultRow = (props) => {\n    return (\n        <div className=\"resultSetItem d-flex\" onClick={props.showDetailView}>\n            <div className=\"flex-none d-flex flex-column dateTimeColumn text-right\">\n                <div className=\"textLabel\">{moment(props.data.firstcreated).format(\"DD/MM/YYYY hh:mm a\")}</div>\n                <div className=\"font-size-xs light-grey\">Edit No: {props.data.version}</div>\n            </div>\n            <div className=\"flex-auto d-flex flex-column item-title\">\n                <div className=\"textLabel text-uppercase\">{props.data.slug ? props.data.slug : 'Tech-ces/screens'}</div>\n                <h3>{props.data.headline}</h3>\n            </div>\n            <div className=\"flex-none d-flex\">\n                <div className=\"catItems textLabel text-uppercase\">egf038</div>\n                <div className=\"catItems textLabel text-uppercase\">{props.data.language}</div>\n                <div className=\"catItems textLabel text-uppercase\">{props.data.destination.join(\", \")}</div>\n            </div>\n        </div>\n    );\n}\n\n\nexport default ResultRow;","import { GET_SEARCH_RESULT, GET_SINGLE_RECORD, GET_DOWNLOAD_LINK, GET_EXPORT_LINK } from \"../constants/commonConstants\";\n\n\nexport function getSearchResult(payload) {\n    return {\n        type: GET_SEARCH_RESULT,\n        payload: payload\n    }\n}\n\nexport function getSingleRecord(id) {\n    return {\n        type: GET_SINGLE_RECORD,\n        payload: id\n    }\n}\n\nexport function getDownloadLink(payload) {\n    return {\n        type: GET_DOWNLOAD_LINK,\n        payload: payload\n    }\n}\n\nexport function exportData(payload, email) {\n    payload.email= email;\n    return {\n        type: GET_EXPORT_LINK,\n        payload: payload\n    }\n}","export const GET_LANGUAGES = \"GET_LANGUAGES\";\nexport const SET_LANGUAGES = \"SET_LANGUAGES\";\n\nexport const GET_TOPIC_CODES = \"GET_TOPIC_CODES\";\nexport const SET_TOPIC_CODES = \"SET_TOPIC_CODES\";\n\nexport const SET_CHANNEL = \"SET_CHANNEL\";\nexport const GET_CHANNEL = \"GET_CHANNEL\";\n\nexport const GET_DESTINATIONS = \"GET_DESTINATIONS\";\nexport const SET_DESTINATIONS = \"SET_DESTINATIONS\";\n\nexport const SET_FILTERS = \"SET_FILTERS\";\n\nexport const GET_SEARCH_RESULT = \"GET_SEARCH_RESULT\";\nexport const SET_SEARCH_RESULT =  \"SET_SEARCH_RESULT\";\n\nexport const GET_SINGLE_RECORD = \"GET_SINGLE_RECORD\";\nexport const SET_SINGLE_RECORD = \"SET_SINGLE_RECORD\";\n\nexport const SET_DOWNLOAD_LINK = \"SET_DOWNLOAD_LINK\";\nexport const GET_DOWNLOAD_LINK = \"GET_DOWNLOAD_LINK\";\n\nexport const GET_EXPORT_LINK =  \"GET_EXPORT_LINK\";","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport { getSingleRecord } from '../../actions/searchAction';\nimport { Scrollbars } from 'react-custom-scrollbars';\n\nclass ResultDetailView extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            jsonPrettyFormat: false,\n        }\n        this.props.getSingleRecord(this.props.recordId);\n    }\n    switchJsonFormat = (e, pretty) => {\n        e.preventDefault();\n        this.setState({\n            ...this.state,\n            jsonPrettyFormat: pretty,\n        })\n    }\n    \n    render() {\n        const resultData = this.props.result;\n        const jsonData = resultData && resultData.singleResult && resultData.singleResult.docs &&\n        resultData.singleResult.docs[0] &&\n        resultData.singleResult.docs[0]._source ?\n        resultData.singleResult.docs[0]._source : 'Loading the data...';\n        const fileData = \"text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(jsonData));\n        const fileName = jsonData && jsonData.headline ? (jsonData.headline).split(' ').join('_').toLowerCase() + '.json' : 'data.json';\n        return (\n            <div className=\"col h-100 pr-0 overFlowScroll itemDetailWrap arrow-right\">\n                <Scrollbars>\n                <div className=\"itemResult mr-3\">\n                    <div className=\"resultSetHeader\">\n                        <div className=\"d-flex flex-column dateTimeColumn position-relative\">\n                            <div className=\"textLabel font500 \">\n                                {jsonData && jsonData.firstcreated ? moment(jsonData.firstcreated).format(\"DD/MM/YYYY hh:mm a\") : '01/10/2020 4:33 PM'}\n                            </div>\n        <div className=\"textLabel\">Edit No:{jsonData && jsonData.version ? jsonData.version : 'Not Available'}</div>\n                            <div className=\"close-icon\" onClick={this.props.closeDetailView}></div>\n                        </div>\n                        <div className=\"flex-auto d-flex flex-column item-title\">\n\n                            <div className=\"textLabel font500 text-uppercase\">{jsonData && jsonData.slug ? jsonData.slug : 'Tech-ces/screens'}</div>\n                            <div className=\"d-flex flex-row row\">\n                                <div className=\"col\">\n                                    <h3>{jsonData && jsonData.headline ? jsonData.headline : 'Loading The Data...'}</h3>\n                                </div>\n                                <div className=\"col-auto\">\n                                    <a className=\"link d-block\" href={'data:'+ fileData} download={fileName} >Download File </a>\n                                </div>\n\n\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"resultText\">\n                        <div className=\"d-flex dataTabs\">\n                            <button onClick={(e, pretty) => this.switchJsonFormat(e, false)} className={this.state.jsonPrettyFormat ? 'text-uppercase btn' : 'text-uppercase btn active'}>Raw</button>\n                            <button onClick={(e, pretty) => this.switchJsonFormat(e, true)} className={this.state.jsonPrettyFormat ? 'text-uppercase btn active' : 'text-uppercase btn'}>Prettify</button>\n                        </div>\n                        <div className=\"infoData\">\n                            {\n                                this.state.jsonPrettyFormat ?\n                                    <div className=\"prettifyData\">\n                                        <pre> {this.props ? JSON.stringify(jsonData, undefined, 2) : 'Loading The Data...'} </pre>\n                                    </div> :\n\n                                    <div className=\"rawData\">\n                                       {this.props ? JSON.stringify(jsonData) : 'Loading The Data...'}\n                                    </div>\n                            }\n                        </div>\n                    </div>\n                </div>\n                </Scrollbars>\n            </div>\n        );\n    }\n\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        result: state.singleRecord,\n    };\n};\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getSingleRecord: (id) => dispatch(getSingleRecord(id)),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultDetailView);","export function numberWithCommas (num) {\n    return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n","import React, { Component } from 'react';\nimport ResultRow from './ResultRow';\nimport { connect } from \"react-redux\";\nimport ResultDetailView from './ResultDetailView';\nimport { getSingleRecord } from '../../actions/searchAction';\nimport { numberWithCommas } from \"../../Utility\";\nimport { get, orderBy } from 'lodash';\nimport { Scrollbars } from 'react-custom-scrollbars';\n\nclass SearchResult extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state =  {\n            isItemOpened: this.props.fromFilter,\n            recordId:null,\n            isModalOpened: false,\n            isSaveChanges: false,\n            titleOrderBy: true, // true: asc, false: desc\n            dateOrderBy: true,\n            langOrderBy: true,\n        }\n    }\n\n    calculatePercentage = (fetchedCount, totalCount) => {\n        if(totalCount > 0) {\n            return ((fetchedCount/totalCount) * 100).toFixed(2);\n        }\n        return 0;\n    }\n\n    showDetailView = (id, index) => {\n        this.props.result.docs = this.shiftToTop(this.props.result.docs, index, 0);\n        document.body.scrolltop = -1;\n        document.documentElement.scrollTop = -1;\n        this.props.getSingleRecord(id);\n        this.setState({\n            ...this.state,\n            isItemOpened: true,\n            recordId: id\n        })\n    }\n    showModalView = () => {\n        document.getElementById(\"email\").value = '';\n        this.setState({\n            ...this.state,\n            isModalOpened: !this.state.isModalOpened\n        })\n    }\n    toggle = () => {\n        this.setState({ isSaveChanges: !this.state.isSaveChanges })\n    }\n    showSaveChangesNote = () => {\n        const email = document.getElementById(\"email\").value;\n        if(email.length){\n        this.props.clickedOnExport(email);\n            this.setState({\n                ...this.state,\n                isSaveChanges: !this.state.isSaveChanges,\n                isModalOpened: false\n            })\n            setTimeout(this.toggle, 5000);\n        }\n    }\n    closeDetailView = () => {\n        this.setState({\n            ...this.state,\n            isItemOpened: false\n        })\n    }\n\n    shiftToTop(dataSet, position, topPosition = 0) {\n        while (position < 0) {\n            position += dataSet.length;\n        }\n        while (topPosition < 0) {\n            topPosition += dataSet.length;\n        }\n        if (topPosition >= dataSet.length) {\n            var k = topPosition - dataSet.length;\n            while ((k--) + 1) {\n                dataSet.push(undefined);\n            }\n        }\n        dataSet.splice(topPosition, 0, dataSet.splice(position, 1)[0]);  \n       return dataSet;\n    }\n    sort(key){\n        if(key === 'title'){\n        this.setState({\n            ...this.state,\n            titleOrderBy: !this.state.titleOrderBy,\n        });\n        this.props.result.docs = orderBy(this.props.result.docs, ['_source.headline'],[this.state.titleOrderBy ? 'asc' : 'desc']);\n        }else if(key === 'date'){\n            this.setState({\n                ...this.state,\n                dateOrderBy: !this.state.dateOrderBy,\n            });\n            this.props.result.docs = orderBy(this.props.result.docs, ['_source.firstcreated'],[this.state.dateOrderBy ? 'asc' : 'desc']);\n        } else if(key === 'language'){\n            this.setState({\n                ...this.state,\n                langOrderBy: !this.state.langOrderBy,\n            });\n            this.props.result.docs = orderBy(this.props.result.docs, ['_source.language'],[this.state.langOrderBy ? 'asc' : 'desc']);\n        }\n    }\n\n    render() {\n        const fetchedCount = this.props.result && this.props.result.docs ? this.props.result.docs.length : 0;\n        let con = get(this.props.result, 'docs[0]._source') || null;\n        console.log('con:-----', con);\n        console.log('this.state: ', this.state);\n        const totalCount = this.props.result && this.props.result.totalCount ? this.props.result.totalCount : 0;\n        return (\n            <div className={`resultSet h-100 ${this.state.isItemOpened ? \"openItemDetails\" : \"\"}`}>\n                <div className=\"row h-100\">\n                    <div className=\"col pr-0 h-100 overFlowScroll\">\n                    <Scrollbars>\n                        <div className=\"resultSetList mr-3\">\n                            <div className=\"resultSetItem tableHead d-flex\">\n                                <div onClick={(key) => this.sort('date')} className=\"flex-none d-flex flex-row dateTimeColumn align-items-center\">\n                                    <div className=\"textLabel \">Date</div>\n                                    <div className=\"sort\">\n                                        <span className=\"arrow-up\"></span>\n                                        <span className=\"arrow-down\"></span>\n                                    </div>\n\n                                </div>\n                                <div onClick={(key) => this.sort('title')} className=\"flex-auto d-flex flex-row item-title align-items-center\">\n                                    <div className=\"textLabel \">Title</div>\n                                    <div className=\"sort\">\n                                        <span className=\"arrow-up\"></span>\n                                        <span className=\"arrow-down\"></span>\n                                    </div>\n                                </div>\n                                <div className=\"flex-none d-flex align-items-center\">\n                                    <div className=\"catItems textLabel text-uppercase d-flex align-items-center\">\n                                        <div>Topic Code</div>\n                                        {/* <div className=\"sort\">\n                                            <span className=\"arrow-up\"></span>\n                                            <span className=\"arrow-down\"></span>\n                                        </div> */}\n                                    </div>\n                                    <div onClick={(key) => this.sort('language')} className=\"catItems textLabel text-uppercase d-flex align-items-center\">\n                                        <div>Language</div>\n                                        <div className=\"sort\">\n                                            <span className=\"arrow-up\"></span>\n                                            <span className=\"arrow-down\"></span>\n                                        </div>\n                                    </div>\n                                    <div className=\"catItems textLabel text-uppercase d-flex align-items-center\">\n                                        <div>Destination</div>\n                                        {/* <div className=\"sort\">\n                                            <span className=\"arrow-up\"></span>\n                                            <span className=\"arrow-down\"></span>\n                                        </div> */}\n                                    </div>\n                                </div>\n                            </div>\n                            {this.props.result && this.props.result.docs ? this.props.result.docs.map((obj, index) =>\n                                <ResultRow\n                                    data={obj._source}\n                                    key={obj._id}\n                                    showDetailView={(id) => this.showDetailView(obj._id, index)}\n                                />\n                            ) :\n                            <h3 className=\"secondary-title center mb-0\">Loading Data...</h3>\n                            }\n                        </div>\n                        </Scrollbars>\n                    </div>\n                    {this.state.isItemOpened ? <ResultDetailView recordId={this.state.recordId} closeDetailView={this.closeDetailView} /> : null}\n                </div>\n                \n                <div className=\"exportFullDataWrap\">\n                    <div className={`alert alert-info fade-slow ${this.state.isSaveChanges ? 'd-flex' : 'd-none' }`} role=\"alert\">\n                        Your file is being exported, you should receive an email shortly with a link to the file\n                    </div>\n                    <div className=\"d-flex justify-content-end align-items-center\">\n                        <p className=\"m-0\">Showing {this.calculatePercentage(fetchedCount, totalCount)}% of {numberWithCommas(totalCount)}</p> <button className=\"btn primary-btn\" data-toggle=\"modal\" data-target=\"#exampleModal\" onClick={this.showModalView}>Export Full Data</button>\n                    </div>\n                </div>\n                \n                <div className={`modal fade ${this.state.isModalOpened ? 'd-flex' : 'd-none' } align-items-center show`} id=\"exampleModal\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                    <div className=\"modal-dialog\" role=\"document\">\n                        <div className=\"modal-content\">\n                        <div className=\"modal-body\">\n                            <p className=\"font-size-lg text-center mb-4\">You will receive a link to the export via email, enter your email to receive a link to the exported file</p>\n                            <label className=\"formLabel text-uppercase\">Email</label>\n                            <input className=\"form-control\" name=\"email\" id=\"email\" type=\"email\" placeholder=\"Enter your email\" />\n                            <div className=\"d-flex align-items-center justify-content-end\">\n                                <div className=\"link mr-4\" onClick={this.showModalView} >Cancel Export</div>\n                                <button type=\"button\" className=\"btn primary-btn\" onClick={this.showSaveChangesNote}>Save changes</button>\n                            </div>\n                        </div>\n                        \n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getSingleRecord: (id) => dispatch(getSingleRecord(id)),\n    };\n};\n\nexport default  connect(null, mapDispatchToProps)(SearchResult);","import React, { Component } from 'react';\n\nclass SearchBar extends Component {\n\n    render() {\n        return (\n            <div className=\"searchBar position-relative\">\n                <input className=\"form-control\" placeholder=\"Search Keyword\" />\n                <div className=\"icon-search position-absolute\"></div>\n                {/* <div>\n                    <button className=\"btn btn-filter position-relative text-uppercase\" onClick={this.props.showHideFilterOption}>Filter <div className=\"icon-ctrl\"></div></button>\n                </div> */}\n            </div>\n        );\n    }\n\n}\n\nexport default SearchBar;","import React from 'react';\nimport Select from \"react-select\";\nconst SelectDropdown = (props) => {\n\n    const customStyles = {\n        dropdownIndicator: () => ({\n            display: \"none\"\n        })\n    };\n\n    return (\n        <React.Fragment>\n            <Select\n                isMulti = { props.isMultiSelect ? true : false }\n                placeholder={`Select ${props.dropdownName}`}\n                styles={customStyles}\n                name=\"colors\"\n                isClearable={false}\n                value={props.selectedValues}\n                // controlShouldRenderValue={false}\n                options={props.options}\n                className=\"basic-multi-select\"\n                classNamePrefix=\"select\"\n                isSearchable= { props.isSearchable ? true : false }\n                onChange={props.onOptionSelect}\n            />\n            {/* <div className=\"selectedOpt\">\n                {props.selectedValues.map(obj =>\n                    <div>{obj.label} <span id={obj.id} className=\"removeOpt close-icon\"></span></div>\n                )}\n            </div> */}\n        </React.Fragment>\n    );\n}\n\nexport default SelectDropdown;","import React, { Component } from \"react\";\nimport SelectDropdown from \"../Common/SelectDropdown\";\n\n\n\nclass AdvanceFilter extends Component {\n\n  mapToGenericKeyValuePair = () => {\n    const languageOptions = this.props.common.languages.map(lang => {\n      return { \n        id: lang.id,\n        value: lang.language_code,\n        label: lang.language\n      }\n    });\n\n    const destinationOptions = this.props.common.destinations.map(obj => {\n      return { \n        id: obj.id,\n        value: obj.destination,\n        label: obj.destination\n      }\n    });\n\n    const channelOptions = this.props.common.channel.map(obj => {\n      return { \n        id: obj.id,\n        value: obj.channel,\n        label: obj.channel\n      }\n    });\n\n    const topicCodesOptions = this.props.common.topicCodes.map(obj => {\n      return { \n        id: obj.id,\n        value: obj.primary_N2000_code,\n        label: obj.primary_eikon_news_mnemonic\n      }\n    });\n\n    return { languageOptions, destinationOptions, topicCodesOptions, channelOptions };\n  }\n\n\n  render() {\n    const { languageOptions, destinationOptions, topicCodesOptions, channelOptions } = this.mapToGenericKeyValuePair();\n    \n    return (\n      <div className={`filterWrap flex-column d-flex`}>\n        <div className=\"row\">\n          <div className=\"col\">\n            <div className=\"catList\">\n              <label className=\"text-uppercase formLabel d-block\">Language</label>\n              <SelectDropdown \n                options={languageOptions}\n                selectedValues={this.props.selectedLanguages}\n                onOptionSelect={this.props.onLanguageSelect}\n                dropdownName=\"language\"\n                isMultiSelect={true}\n                isSearchable={true}\n              />\n            </div>\n          </div>\n          <div className=\"col\">\n            <div className=\"catList\">\n              <label className=\"text-uppercase formLabel d-block\">Channel</label>\n              <SelectDropdown\n              options={channelOptions}\n              selectedValues={this.props.selectedChannels}\n              onOptionSelect={this.props.onChannelSelect}\n              dropdownName=\"channel\"\n              isMultiSelect={true}\n              isSearchable={true}\n               />\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\">\n            <div className=\"catList\">\n              <label className=\"text-uppercase formLabel d-block\">Topic code</label>\n              <SelectDropdown \n                options={topicCodesOptions}\n                selectedValues={this.props.selectedTopicCodes}\n                onOptionSelect={this.props.onTopiCodeSelect}\n                dropdownName=\"topic code\"\n                isMultiSelect={true}\n                isSearchable={true}\n              />\n            </div>\n          </div>\n          <div className=\"col\">\n            <div className=\"catList\">\n              <label className=\"text-uppercase formLabel d-block\">Destination</label>\n              <SelectDropdown \n                options={destinationOptions}\n                selectedValues={this.props.selectedDestinations}\n                onOptionSelect={this.props.onDestinationSelect}\n                dropdownName=\"destination\"\n                isMultiSelect={true}\n                isSearchable={true}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-6\">\n            <div className=\"catList\">\n              <label className=\"text-uppercase formLabel d-block\">Source</label>\n              <SelectDropdown \n                // options={topicCodesOptions}\n                selectedValues={this.props.selectedTopicCodes}\n                onOptionSelect={this.props.onTopiCodeSelect}\n                dropdownName=\"Source\"\n                isMultiSelect={true}\n                isSearchable={true}\n              />\n            </div>\n          </div>\n          </div>\n         {!this.props.isOpenedFromFilterOption ? <div className=\"close-icon\" onClick={this.props.showHideAdvanceFilter} /> : null}\n          \n      </div>\n    );\n  }\n}\n\n\nexport default AdvanceFilter;\n","import { SET_FILTERS } from \"../constants/commonConstants\";\n\n\nexport function setFilters(payload) {\n    return {\n        type: SET_FILTERS,\n        payload: payload\n    }\n}","import React from 'react';\n\nconst Checkbox = (props) => {\n    return (\n        <div className=\"custom-control custom-checkbox\">\n            <input type=\"checkbox\" checked={props.checked} className=\"custom-control-input\" id={props.id || props.name} name={props.type} onChange={props.checkBoxHandler} />\n            <label className=\"custom-control-label\" htmlFor={props.id || props.name}>{props.name}</label>\n        </div>\n    );\n}\n\nexport default Checkbox;","import React from 'react';\n\nconst RadioButton = (props) => {\n    return (\n        <div className=\"custom-control custom-radio\">\n            <input type=\"radio\" className=\"custom-control-input\" id={props.value} disabled={props.disabled} name={props.type} value={props.value} onChange={props.radioButtonHandler} />\n            <label className=\"custom-control-label\" htmlFor={props.value}>{props.value}</label>\n        </div>\n    );\n}\n\nexport default RadioButton;","import React, { Component } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport Checkbox from \"./../Common/Checkbox\";\nimport SelectDropdown from \"../Common/SelectDropdown\";\nimport RadioButton from \"../Common/RadioButton\";\n\nclass BasicFilter extends Component {\n  \n  checkBoxHandler = (e,res) => {\n    e.preventDefault();\n    console.log(\"e\", e);\n  };\n\n  render() {\n\n    return (\n      <div className={`filterWrap flex-column`}>\n        <div className=\"row\">\n          <div className={!this.props.isOpenedFromFilterOption ? `col-7` : `col-8` }>\n            <div className=\"row m-0\">\n              <div className=\"col-5 p-0\">\n                <div className=\"catList\">\n                <label className=\"text-uppercase formLabel d-block\">Index</label>\n                \n                  <RadioButton\n                    //key={index}\n                    value= \"Rcon\"\n                    type=\"sampleCount\"\n                    // disabled={true}\n                    //radioButtonHandler={(e, res) => this.props.onSampleCountChangeHandler(e, res)}\n                    //checked= {this.props.selectedSampleCount === obj.value}\n                  />\n                  <RadioButton\n                    //key={index}\n                    value= \"Archive Text\"\n                    type=\"sampleCount\"\n                    // disabled={true}\n                    //radioButtonHandler={(e, res) => this.props.onSampleCountChangeHandler(e, res)}\n                    //checked= {this.props.selectedSampleCount === obj.value}\n                  />\n\n                  <label className=\"text-uppercase formLabel d-block pt-5\">Sort By</label>\n                                  \n                  <RadioButton\n                    //key={index}\n                    value= \"Random\"\n                    type=\"sampleCount\"\n                    // disabled={true}\n                    //radioButtonHandler={(e, res) => this.props.onSampleCountChangeHandler(e, res)}\n                    //checked= {this.props.selectedSampleCount === obj.value}\n                  />\n                  <RadioButton\n                    //key={index}\n                    value= \"Date Created\"\n                    type=\"sampleCount\"\n                    // disabled={true}\n                    //radioButtonHandler={(e, res) => this.props.onSampleCountChangeHandler(e, res)}\n                    //checked= {this.props.selectedSampleCount === obj.value}\n                  />\n              </div>\n              </div>\n              <div className=\"col-7 p-0\">\n                <div className=\"catList\">\n                <label className=\"text-uppercase formLabel d-block\">Timeline</label>\n                <div className=\"customDatePicker\">\n                <DatePicker showTimeSelect timeFormat=\"HH:mm\" dateFormat=\"MM/dd/yyyy h:mm aa\" showMonthDropdown showYearDropdown dropdownMode= \"select\" placeholderText=\"From date\" selected={this.props.startDate.date}  minDate={this.props.startDate.minDate} maxDate={this.props.startDate.maxDate}  onChange={this.props.onStartDateChangeHandler} />\n                </div>\n                <div className=\"customDatePicker\">\n                <DatePicker showTimeSelect timeFormat=\"HH:mm\" dateFormat=\"MM/dd/yyyy h:mm aa\" showMonthDropdown showYearDropdown dropdownMode= \"select\" placeholderText=\"To date\" selected={this.props.endDate.date} minDate={this.props.endDate.minDate} maxDate={this.props.endDate.maxDate} onChange={this.props.onEndDateChangeHandler} />\n                </div>\n              </div>\n              </div>\n            </div>\n            \n            \n          </div>\n          {!this.props.isOpenedFromFilterOption ? \n          <div className=\"col-auto pr-4\">\n            <div className=\"catList\">\n              <label className=\"text-uppercase formLabel d-block\">Sample Count</label>\n              {this.props.common.sampleCount.map((obj, index) => (\n                  <RadioButton\n                    key={index}\n                    value={obj.value}\n                    type=\"sampleCount\"\n                    // disabled={true}\n                    radioButtonHandler={(e, res) => this.props.onSampleCountChangeHandler(e, res)}\n                    checked= {this.props.selectedSampleCount === obj.value}\n                  />\n                ))}\n            </div>\n          </div> : null }\n          <div className=\"col-auto pl-4\">\n            <div className=\"catList\">\n              <label className=\"text-uppercase formLabel d-block\">Media Type</label>\n              {this.props.common.mediaTypes.map((obj, index) => (\n                  <Checkbox\n                    key={index}\n                    name={obj.label}\n                    type=\"mediaType\"\n                    // disabled={true}\n                    checkBoxHandler={(e) => this.props.onMediaTypeChangeHandler(e, obj.value)}\n                    // checked= {this.props.selectedMediaType === obj.value}\n                    checked={this.props.selectedMediaType.includes(obj.value)}\n                  />\n                ))}\n            </div>\n          </div>\n        </div>\n        {!this.props.isOpenedFromFilterOption ? <div className=\"buttonWrap d-flex justify-content-end align-items-center\">\n           <label role=\"button\" onClick={this.props.showHideAdvanceFilter} className=\"link mr-4\">Advanced Filters</label>\n          <button className=\"btn primary-btn\" onClick={this.props.searchClickHandler}>Search</button>\n          \n        </div> : null }\n      </div>\n    );\n  }\n}\n\nexport default BasicFilter;\n","import React, { Component } from 'react';\nimport SearchBar from './SearchBar';\n\nimport AdvanceFilter from './AdvanceFilter';\nimport * as commonActions from \"../../actions/commonAction\";\nimport * as filterActions from \"../../actions/filterAction\";\nimport { connect } from \"react-redux\";\nimport BasicFilter from './BasicFilter';\n\nclass FilterContainer extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            checkedItems: new Map(),\n            showBasicFilter: true,\n            showAdvanceFilter: false\n        }\n\n        this.props.getLanguages();\n        this.props.getTopicCodes();\n        this.props.getDestinations();\n        this.props.getChannel();\n        this.onMediaTypeChangeHandler = this.onMediaTypeChangeHandler.bind(this);\n    }\n\n    onStartDateChangeHandler = (date) => {\n\n        this.props.setFilters({ ...this.props.filter, startDate: { ...this.props.filter.startDate, date: date }, endDate: { ...this.props.filter.endDate, minDate: date } })\n\n    }\n\n    onEndDateChangeHandler = (date) => {\n\n        this.props.setFilters({ ...this.props.filter, endDate: { ...this.props.filter.endDate, date: date }, startDate: { ...this.props.filter.startDate, maxDate: date } });\n    }\n\n    onSampleCountChangeHandler = (e, SampleCount) => {\n        this.props.setFilters({ ...this.props.filter, selectedSampleCount: e.target.value });\n    }\n\n    onMediaTypeChangeHandler = (e, MediaType) => {\n        const item = MediaType;\n        const isChecked = e.target.checked;\n        this.state.checkedItems.set(item, isChecked);\n        this.setState(prevState => ({ checkedItems: prevState.checkedItems.set(item, isChecked) }));\n        let selectedMediaTypes = [];\n        [...this.state.checkedItems].map(i => {\n            return (i[1] ? selectedMediaTypes.push(i[0]) : '')\n        });\n        this.props.setFilters({ ...this.props.filter, selectedMediaType: selectedMediaTypes });\n    }\n\n\n    showHideAdvanceFilter = () => {\n        this.setState({\n            ...this.state,\n            showAdvanceFilter: !this.state.showAdvanceFilter\n        })\n    }\n\n    onLanguageSelect = (selectedOptions) => {\n        this.props.setFilters({ ...this.props.filter, selectedLanguages: selectedOptions });\n    }\n\n    onChannelSelect = (selectedOptions) => {\n        this.props.setFilters({ ...this.props.filter, selectedChannels: selectedOptions });\n\n    }\n\n    onTopiCodeSelect = (selectedOptions) => {\n        this.props.setFilters({ ...this.props.filter, selectedTopicCodes: selectedOptions });\n\n    }\n\n    onDestinationSelect = (selectedOptions) => {\n        this.props.setFilters({ ...this.props.filter, selectedDestinations: selectedOptions });\n    }\n\n    onSampleCountSelect = (selectedValue) => {\n        this.props.setFilters({ ...this.props.filter, selectedMediaTypes: selectedValue });\n    }\n\n    renderFilterForHomepage = () => {\n        return (\n            <React.Fragment>\n                <div className=\"innerFilterWrap\">\n                    <div className=\"row\">\n                        <div className=\"col pr-0\">\n                            <SearchBar showHideFilterOption={this.showHideFilterOption} />\n                            <BasicFilter\n                                common={this.props.common}\n                                onEndDateChangeHandler={this.onEndDateChangeHandler}\n                                onStartDateChangeHandler={this.onStartDateChangeHandler}\n                                startDate={this.props.filter.startDate}\n                                endDate={this.props.filter.endDate}\n                                selectedSampleCount ={this.props.filter.selectedSampleCount}\n                                selectedMediaType ={this.props.filter.selectedMediaType}\n                                onSampleCountChangeHandler={this.onSampleCountChangeHandler}\n                                onMediaTypeChangeHandler={this.onMediaTypeChangeHandler}\n                                showHideAdvanceFilter={this.showHideAdvanceFilter}\n                                searchClickHandler={this.props.searchClickHandler}\n                                isOpenedFromFilterOption={false}\n                            />\n                        </div>\n                    </div>\n                </div>\n                {/* {this.state.showAdvanceFilter ? ( */}\n                    <div className=\"innerFilterWrap advanceFilterWrap\">\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <AdvanceFilter\n                                    showHideFilterOption={this.showHideFilterOption}\n                                    showFilters={this.state.showFilters}\n                                    showHideAdvanceFilter={this.showHideAdvanceFilter}\n                                    common={this.props.common}\n                                    onLanguageSelect={this.onLanguageSelect}\n                                    onChannelSelect={this.onChannelSelect}\n                                    onTopiCodeSelect={this.onTopiCodeSelect}\n                                    onDestinationSelect={this.onDestinationSelect}\n                                    selectedLanguages={this.props.filter.selectedLanguages}\n                                    selectedDestinations={this.props.filter.selectedDestinations}\n                                    selectedTopicCodes={this.props.filter.selectedTopicCodes}\n                                    selectedChannels={this.props.filter.selectedChannels}\n                                    isOpenedFromFilterOption={false}\n                                />\n                            </div>\n                        </div>\n                    </div>\n            </React.Fragment>\n        )\n    }\n\n    renderFilterForFilterOption = () => {\n        return (<div className=\"innerFilterWrap\">\n            <div className=\"row\">\n                <div className=\"col-7\">\n                    <BasicFilter\n                        common={this.props.common}\n                        onEndDateChangeHandler={this.onEndDateChangeHandler}\n                        onStartDateChangeHandler={this.onStartDateChangeHandler}\n                        startDate={this.props.filter.startDate}\n                        endDate={this.props.filter.endDate}\n                        selectedSampleCount ={this.props.filter.selectedSampleCount}\n                        selectedMediaType ={this.props.filter.selectedMediaType}\n                        onSampleCountChangeHandler={this.onSampleCountChangeHandler}\n                        onMediaTypeChangeHandler={this.onMediaTypeChangeHandler}\n                        showHideAdvanceFilter={this.showHideAdvanceFilter}\n                        searchClickHandler={this.props.searchClickHandler}\n                        isOpenedFromFilterOption={true}\n                    />\n                </div>\n                <div className=\"col-5\">\n                    <AdvanceFilter\n                        showHideFilterOption={this.showHideFilterOption}\n                        showFilters={this.state.showFilters}\n                        showHideAdvanceFilter={this.showHideAdvanceFilter}\n                        common={this.props.common}\n                        onLanguageSelect={this.onLanguageSelect}\n                        onChannelSelect={this.onChannelSelect}\n                        onTopiCodeSelect={this.onTopiCodeSelect}\n                        onDestinationSelect={this.onDestinationSelect}\n                        selectedLanguages={this.props.filter.selectedLanguages}\n                        selectedDestinations={this.props.filter.selectedDestinations}\n                        selectedTopicCodes={this.props.filter.selectedTopicCodes}\n                        selectedChannels={this.props.filter.selectedChannels}\n                        isOpenedFromFilterOption={true}\n                    />\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col\">\n                    <div className=\"buttonWrap d-flex justify-content-end align-items-center\">\n                        <button className=\"btn primary-btn\" onClick={this.props.searchClickHandler}>Search</button>\n                    </div>\n                </div>\n            </div>\n        </div>)\n    }\n\n    render() {\n    \n        return (\n            <div className={`${!this.props.isOpenedFromFilterOption ? \"col-sm-7\" : \"col\" } ${this.state.showAdvanceFilter ? \"showAdFilter\" : null}`}>\n                {this.props.isOpenedFromFilterOption ? this.renderFilterForFilterOption() : this.renderFilterForHomepage()}\n            </div>\n        )\n    }\n\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        common: state.common,\n        filter: state.filter\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getLanguages: () => dispatch(commonActions.getLanguagesAction()),\n        getChannel: () => dispatch(commonActions.getChannel()),\n        getTopicCodes: () => dispatch(commonActions.getTopicCodes()),\n        getDestinations: () => dispatch(commonActions.getDestinations()),\n        setFilters: (payload) => dispatch(filterActions.setFilters(payload))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterContainer);\n","import * as CommonActionTypes from \"../constants/commonConstants\";\n\nexport function getLanguagesAction() {\n  return {\n    type: CommonActionTypes.GET_LANGUAGES\n  };\n}\n\nexport function getTopicCodes() {\n  return {\n    type: CommonActionTypes.GET_TOPIC_CODES\n  }\n}\n\nexport function getChannel() {\n  return {\n    type: CommonActionTypes.GET_CHANNEL\n  }\n}\n\nexport function getDestinations() {\n  return {\n    type: CommonActionTypes.GET_DESTINATIONS\n  }\n}","import React, { Component } from \"react\";\nimport SearchBar from \"./SearchBar\";\nimport FilterContainer from \"./FilterContainer\";\nimport { connect } from \"react-redux\";\nimport { numberWithCommas } from \"../../Utility\";\nimport SelectDropdown from \"../Common/SelectDropdown\";\n\n\nclass SearchHeader extends Component {\n    constructor(props) {\n        super(props);\n        this.state ={\n                        isModalOpened: false,\n                        link: '',\n                        data: null,\n                        fetchedCount: (props.result && props.result.docs ? props.result.docs.length : 0),\n                    }\n    }\n    static getDerivedStateFromProps(props, state) {\n        console.log('props:', props);\n        console.log('state:', state);\n            if(props && props.downloadLink && props.downloadLink.length && (state.link !== props.downloadLink )){\n                var link = document.createElement('a');\n                link.href = props.downloadLink;\n                document.body.appendChild(link);\n                link.click();\n            }\n            return {\n                ...state,\n                link:props.downloadLink,\n            };\n      }\n    showModalView = () => {\n        new Promise(() => {\n            this.props.clickOnDownloadLink();\n          }).then(() => {\n            window.location.replace(this.props.downloadLink.link);\n            \n          });\n    }\n    closeModal = () => {\n        this.setState({\n                isModalOpened: false\n            })\n    }\n\n\n\n    render() {\n    console.log('fetchedCount:', this.state.fetchedCount);\n    const options = [{\n        label: '20 Results',\n        value: 20\n    }, \n    {\n        label: '40 Results',\n        value: 40\n    },\n    {\n        label: '60 Results',\n        value: 60\n    },\n    {\n        label: '80 Results',\n        value: 80\n    },\n    {\n        label: '100 Results',\n        value: 100\n    }];\n    \n    return (\n        <div className={`container-fluid stickyHeader`}>\n            <div className=\"row\">\n                <div className=\"col-sm-9 position-relative\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <SearchBar />\n                        </div>\n                        <div className=\"col-2 singleSelect\">\n                            \n                            <SelectDropdown \n                                options={options}\n                                selectedValues={this.props.selectedSampleCount}\n                                onOptionSelect={this.props.onSampleCountSelect}\n                                dropdownName=\"Count\"\n                                isMultiSelect={false}\n                                isSearchable={false}\n                            />\n                        </div>\n                        <div className=\"col-auto\">\n                            <button onClick={this.props.showHideFilter} className={`btn secondary-btn text-uppercase downArrow ${this.props.showFilters ? \"openFilterBtn\": \"\"}`}>More Filters</button>\n                        </div>\n                        <div className=\"col-sm-12\">\n                            <p className=\"resultCount\">{numberWithCommas(this.props.fetchedCount)} of {numberWithCommas(this.props.totalCount)} items</p>\n                        </div>\n                    </div>\n                    <div className=\"row filterMainWrap\">\n                        {this.props.showFilters ? <FilterContainer\n                        searchClickHandler={this.props.searchClickHandler}\n                        isOpenedFromFilterOption={true} /> : null}\n                    </div>\n                </div>\n                <div className=\"col text-right\">\n                    <button onClick={this.showModalView} className=\"btn primary-btn text-uppercase\">Download Sample</button>\n                    {/* <button onClick={this.showModalView} disabled={this.state.fetchedCount ? false : true} className=\"btn primary-btn text-uppercase\">Download Sample</button> */}\n\n                </div>\n            </div>\n\n\n\n            <div className={`modal fade ${this.state.isModalOpened ? 'd-flex' : 'd-none' } align-items-center show`} id=\"exampleModal\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                    <div className=\"modal-body\">\n                        <p className=\"font-size-lg text-center mb-4\">Please confirm the Download</p>\n                        <div className=\"d-flex align-items-center justify-content-end\">\n                            <button className=\"link mr-4\" onClick={(e) => this.closeModal(e)} >Cancel</button>\n                            <a id='link_click' href={this.state.link || '#'} onClick={this.closeModal} className=\"btn primary-btn\">Confirm</a>\n                            \n                        </div>\n                    </div>\n                    \n                    </div>\n                </div>\n            </div>\n\n\n\n\n        </div>\n    )\n    }\n}\n\nconst mapStateToprops = state => {\n    return {\n        downloadLink: state.downloadLink.link\n    };\n};\n\nexport default connect(mapStateToprops, null )(SearchHeader);","import React, { Component } from 'react';\nimport SearchResult from './SearchResult';\nimport FilterContainer from './FilterContainer';\nimport SearchHeader from './SearchHeader';\nimport { connect } from \"react-redux\";\n// import Loader from \"../Common/Loader\";\nimport { getSearchResult, getDownloadLink, exportData } from '../../actions/searchAction';\nimport * as filterActions from \"../../actions/filterAction\";\n\nclass SearchContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showFilters: true,\n            isSearchClicked: false,\n            loaderState: false,\n            fromfilter: false,\n        }\n    }\n\n    getFilterPayload = () => {\n        \n        if(this.props.filter) {\n            return {\n                filters: {\n                    destination: this.props.filter.selectedDestinations ? this.props.filter.selectedDestinations.map(obj => obj.value) : [],\n                    language: this.props.filter.selectedLanguages ? this.props.filter.selectedLanguages.map(obj => obj.value) : [],\n                    channel: this.props.filter.selectedChannels ? this.props.filter.selectedChannels.map(obj => obj.value) : [],\n                    date: {\n                        from: this.props.filter.startDate ? this.props.filter.startDate.date : \"\",\n                        to: this.props.filter.endDate ? this.props.filter.endDate.date : \"\"\n                    },\n                    type: this.props.filter.selectedMediaType ?  this.props.filter.selectedMediaType : [],\n                    size: this.props.filter.selectedSampleCount ?  this.props.filter.selectedSampleCount : 20\n                }\n            };\n        }\n        \n    }\n\n    searchClickHandler = () => {\n        this.setState({\n            ...this.state,\n            showFilters: false,\n            isSearchClicked: true,\n\n        })\n\n        this.props.getSearchResult(this.getFilterPayload());\n    }\n\n    clickOnDownloadLink = () => {\n            this.props.getDownloadLink(this.getFilterPayload());\n            // window.location.replace(this.props.downloadLink.link);\n    }\n\n    clickedOnExport = (email) => {\n        this.props.exportData(this.getFilterPayload(), email);\n    }\n\n    showHideFilter = () => {\n        this.setState({\n            ...this.state,\n            showFilters: !this.state.showFilters,\n            fromfilter: !this.state.fromfilter,\n        })\n    }\n\n    onSampleCountSelect = (selectedValue) => {\n        \n        this.props.setFilters({ ...this.props.filter,  selectedSampleCount: selectedValue.value})\n        this.props.getSearchResult({...this.getFilterPayload(), size: selectedValue.value});\n\n    }\n\n    renderWelcomeScreen = () => {\n        if (!this.state.isSearchClicked) {\n            return (\n                <div className=\"container-fluid\">\n                    <div className=\"row position-relative  filterMainWrap\">\n                        <FilterContainer\n                            searchClickHandler={this.searchClickHandler}\n                        />\n                        <div className=\"col-sm-5 d-flex flex-column justify-content-center welcomeText\">\n                            <h1 className=\"primary-title\">Welcome to the Reuters <br />Data Extraction Tool</h1>\n                            <h3 className=\"secondary-title mb-0\">Giving you the power and agility <br />to harness the world’s content</h3>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n\n    render() {\n        const selectedSampleArr = this.props.filter && this.props.filter.selectedSampleCount ? [{ label : `${this.props.filter.selectedSampleCount} Results`, value: this.props.filter.selectedSampleCount }] : null;\n        return (\n            // <div> <Loader loader={this.props.searchResult.length ? false : true} />\n            <div className={`mainWrapper ${this.state.isSearchClicked ? \"dataListWrapper\" : ''}`}>\n                {this.renderWelcomeScreen()}\n                {this.state.isSearchClicked ? <SearchHeader\n                    showFilters={this.state.showFilters}\n                    showHideFilter={this.showHideFilter}\n                    searchClickHandler={this.searchClickHandler}\n                    fetchedCount={this.props.searchResult.docs ? this.props.searchResult.docs.length : 0}\n                    totalCount={this.props.searchResult.totalCount ? this.props.searchResult.totalCount : 0}\n                    selectedSampleCount={selectedSampleArr}\n                    onSampleCountSelect={this.onSampleCountSelect}\n                    clickOnDownloadLink={this.clickOnDownloadLink}\n                    result= {this.props.searchResult}\n                /> : null}\n                <div className={`container-fluid detailWrap ${this.state.isSearchClicked ? \"\" : \"d-none\"}`}>\n                    <SearchResult\n                    fromFilter={this.state.fromfilter}\n                    result= {this.props.searchResult}\n                    clickedOnExport= {this.clickedOnExport}\n                    />\n                </div>\n            </div>\n            // </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        searchResult: state.result.searchResult,\n        filter: state.filter\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getSearchResult: (payload) => dispatch(getSearchResult(payload)),\n        setFilters: (payload) => dispatch(filterActions.setFilters(payload)),\n        getDownloadLink: (payload) => dispatch(getDownloadLink(payload)),\n        exportData: (payload, email) => dispatch(exportData(payload, email)),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchContainer);","import React from 'react';\nimport Header from './Common/Header';\nimport SearchContainer from './Search/SearchContainer';\n\nconst Dashboard = () => {\n    return (\n        <React.Fragment>\n            <Header />\n            <SearchContainer />\n            <div className=\"pageLoader d-none align-items-center justify-content-center\">\n                <div className=\"icon-spinner animate-spin animation-duration-0-7\n            animation-iteration-count-infinite animation-timing-function-linear\"></div>\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default Dashboard;","import React from 'react';\nimport { Switch, Route } from \"react-router-dom\";\nimport Dashboard from \"./components/Dashboard\";\n\n\nconst Home = () => {\n\n    return (\n        <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route exact path=\"/login\" render={() => (<h2>Login</h2>)} />\n        </Switch>\n    )\n}\n\nexport default Home;","import React from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './assets/css/main.scss'\nimport Home from './Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import axios from \"axios\";\n\nclass ApiService {\n\n  constructor() {\n    this.axios = axios.create({\n      baseURL: 'http://7a450230.ngrok.io/api'\n    })\n  }\n\n  get = url => {\n    return new Promise( async(resolve, reject) => {\n      try {\n        const response = await this.axios.get(url);\n        resolve(response.data)\n      } catch(err) {\n        console.log(\"APIService : get error\", err);\n        reject(err);\n      }\n      \n    });\n  }\n\n  post = (url,payload) => {\n    return new Promise( async(resolve, reject) => {\n      try {\n        const response = await this.axios.post(url, payload);\n        resolve(response.data)\n      } catch(err) {\n        console.log(\"APIService : post error\", err);\n        reject(err);\n      }\n      \n    });\n  }\n\n}\n\nexport default new ApiService();\n","import restAPI from \"./restApi\";\n\nclass APIService {\n    getLanguages = async () => {\n        return new Promise(async(res, rej) => {\n            try{\n                const languageData = await restAPI.get(\"languages\")\n                res(languageData);\n            } catch(err) {\n                rej(err)\n            }\n        });\n    }\n\n    getChannel = async () => {\n        return new Promise(async(res, rej) => {\n            try{\n                const channelData = await restAPI.get(\"channels\")\n                res(channelData);\n            } catch(err) {\n                rej(err)\n            }\n        });\n    }\n\n    getTopicCodes = async () => {\n        return new Promise(async(res, rej) => {\n            try{\n                const topicCodeData = await restAPI.get(\"topic-codes\")\n                res(topicCodeData);\n            } catch(err) {\n                rej(err)\n            }\n        });\n    }\n\n    getDestinations = async () => {\n        return new Promise(async(res, rej) => {\n            try{\n                const data = await restAPI.get(\"destinations\")\n                res(data);\n            } catch(err) {\n                rej(err)\n            }\n        });\n    }\n\n    fetchSearchResult = async (payload) => {\n        return new Promise(async(res, rej) => {\n            try{\n                const data = await restAPI.post(\"/documents\",payload)\n                res(data);\n            } catch(err) {\n                rej(err)\n            }\n        });\n    }\n\n    fetchSingleRecord = async (id) => {\n        return new Promise(async(res, rej) => {\n            try{\n            const data = await restAPI.get(\"/documents/\"+encodeURIComponent(id.payload))\n            res(data);\n            }catch(err){\n                rej(rej);\n            }\n        });\n    }\n\n    downloadSample = async (payload) => {\n        return new Promise(async(res, rej) => {\n            try{\n                const data = await restAPI.post(\"/export/sample\",payload)\n                res(data);\n            } catch(err) {\n                rej(err)\n            }\n        });\n    }\n\n    exportData = async (payload) => {\n        console.log('in api', payload);\n        // return new Promise(async(res, rej) => {\n        //     try{\n        //         const data = await restAPI.post(\"/export/log-query\",payload)\n        //         res(data);\n        //     } catch(err) {\n        //         rej(err)\n        //     }\n        // });\n    }\n}\n\nexport default new APIService(); ","import { takeEvery, put } from \"redux-saga/effects\";\nimport * as CommonActionTypes from \"../constants/commonConstants\";\nimport apiService from \"./../api/api\";\n\nexport function* getLanguages() {\n  try {\n    const response = yield apiService.getLanguages();\n    if(response.status_code === 200) {\n      yield put({\n        type: CommonActionTypes.SET_LANGUAGES,\n        payload: response.data\n      });\n    }\n    \n  } catch(err) {\n    console.log(err);\n  }\n  \n}\n\nexport function* getChannel() {\n  console.log(\"CHANNEL SAGA\");\n  try {\n    const response = yield apiService.getChannel();\n    if(response.status_code === 200) {\n      yield put({\n        type: CommonActionTypes.SET_CHANNEL,\n        payload: response.data\n      });\n    }\n    \n  } catch(err) {\n    console.log(err);\n  }\n  \n}\n\nexport function* getTopicCodes() {\n  try {\n    const response = yield apiService.getTopicCodes();\n    if(response.status_code === 200) {\n      yield put({\n        type: CommonActionTypes.SET_TOPIC_CODES,\n        payload: response.data\n      });\n    }\n  } catch(err) {\n    console.log(\"getTopicCodes--->\",err);\n  }\n}\n\nexport function* getDestinations() {\n  try {\n    const response = yield apiService.getDestinations();\n    if(response.status_code === 200) {\n      yield put({\n        type: CommonActionTypes.SET_DESTINATIONS,\n        payload: response.data\n      });\n    }\n  } catch(err) {\n    console.log(\"getDestinations--->\",err);\n  }\n}\n\nexport default function* commonSaga() {\n  yield takeEvery(CommonActionTypes.GET_LANGUAGES, getLanguages);\n  yield takeEvery(CommonActionTypes.GET_TOPIC_CODES, getTopicCodes);\n  yield takeEvery(CommonActionTypes.GET_CHANNEL, getChannel);\n  yield takeEvery(CommonActionTypes.GET_DESTINATIONS, getDestinations);\n}\n","import { takeEvery, put } from \"redux-saga/effects\";\nimport { GET_SEARCH_RESULT, SET_SEARCH_RESULT, GET_EXPORT_LINK, GET_SINGLE_RECORD, SET_SINGLE_RECORD, GET_DOWNLOAD_LINK, SET_DOWNLOAD_LINK } from \"../constants/commonConstants\";\nimport apiService from \"./../api/api\";\n\n\n\nexport function* fetchSearchResult(payload) {\n\n    try {\n        const response = yield apiService.fetchSearchResult(payload.payload);\n        if (response.status_code === 200) {\n            yield put({\n                type: SET_SEARCH_RESULT,\n                payload: response.data\n            });\n        }\n\n    } catch (err) {\n        console.log(err);\n    }\n\n}\n\nexport function* downloadSample(payload) {\n    try {\n        const response = yield apiService.downloadSample(payload.payload);\n        if (response.status_code === 200) {\n            yield put({\n                type: SET_DOWNLOAD_LINK,\n                payload: response.data\n            });  \n        }\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nexport function* exportData(payload) {\n    try {\n        const response = yield apiService.exportData(payload.payload);\n        if (response.status_code === 200) {\n            yield put({\n                // type: SET_DOWNLOAD_LINK,\n                payload: response.data\n            });  \n        }\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nexport function* fetchSingleRecord(id){\n\n    try{\n        const response = yield apiService.fetchSingleRecord(id);\n        if (response.status_code === 200) {\n            yield put({\n                type: SET_SINGLE_RECORD,\n                payload: response.data\n            });\n        }\n    } catch(err) {\n        console.log(err);\n    }\n}\n\nexport default function* searchSaga() {\n    yield takeEvery(GET_SEARCH_RESULT, fetchSearchResult);\n    yield takeEvery(GET_DOWNLOAD_LINK, downloadSample);\n    yield takeEvery(GET_SINGLE_RECORD, fetchSingleRecord);\n    yield takeEvery(GET_EXPORT_LINK, exportData);\n\n}","import { call, all } from \"redux-saga/effects\";\nimport commonSaga from \"../sagas/commonSaga\";\nimport searchSaga from \"../sagas/searchSaga\";\n\nexport default function* rootSaga() {\n  yield all([call(commonSaga), call(searchSaga)]);\n}\n","export const MEDIA_TYPE = [\n  { label: \"Graphics\", value: \"graphic\" },\n  { label: \"Text\", value: \"text\" },\n  { label: \"Packages\", value: \"composite\" },\n  { label: \"Pictures\", value: \"picture\" },\n  { label: \"Videos\", value: \"video\" }\n];\nexport const SAMPLE_COUNT = [\n  { label: 20, value: 20 },\n  { label: 40, value: 40 },\n  { label: 60, value: 60 },\n  { label: 80, value: 80 },\n  { label: 100, value: 100 }\n];\n\nexport     const TIME_OPTIONS = [\n{ label: '01:00 am', value: '1' }, \n{\n  label: '02:00 am',\n  value: '2'\n},\n{\n  label: '03:00 am',\n  value: '3'\n},\n{\n  label: '04:00 am',\n  value: '4'\n},\n{\n  label: '05:00 am',\n  value: '5'\n},\n{\nlabel: '06:00 am',\nvalue: '6'\n}, \n{\n  label: '07:00 am',\n  value: '7'\n},\n{\n  label: '08:00 am',\n  value: '8'\n},\n{\n  label: '09:00 am',\n  value: '9'\n},\n{\n  label: '10:00 am',\n  value: '10'\n},\n{\nlabel: '11:00 am',\nvalue: '11'\n}, \n{\nlabel: '12:00 am',\nvalue: '12'\n},\n{\nlabel: '01:00 pm',\nvalue: '1'\n}, \n{\nlabel: '02:00 pm',\nvalue: '2'\n},\n{\nlabel: '03:00 pm',\nvalue: '3'\n},\n{\nlabel: '04:00 pm',\nvalue: '4'\n},\n{\nlabel: '05:00 pm',\nvalue: '5'\n},\n{\nlabel: '06:00 pm',\nvalue: '6'\n}, \n{\nlabel: '07:00 pm',\nvalue: '7'\n},\n{\nlabel: '08:00 pm',\nvalue: '8'\n},\n{\nlabel: '09:00 pm',\nvalue: '9'\n},\n{\nlabel: '10:00 pm',\nvalue: '10'\n},\n{\nlabel: '11:00 pm',\nvalue: '11'\n}, \n{\nlabel: '12:00 pm',\nvalue: '12'\n}];\n","import * as CommonActionTypes from \"../constants/commonConstants\";\nimport { MEDIA_TYPE, SAMPLE_COUNT, TIME_OPTIONS } from \"../constants/constants\";\nconst initialState = {\n  mediaTypes: MEDIA_TYPE,\n  sampleCount: SAMPLE_COUNT,\n  timeOptions: TIME_OPTIONS,\n  languages: [],\n  channel:[],\n  topicCodes: [],\n  destinations: []\n};\n\nconst commonReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CommonActionTypes.SET_LANGUAGES:\n      return {\n        ...state,\n        languages: action.payload\n      };\n    \n    case CommonActionTypes.SET_TOPIC_CODES: \n      return {\n        ...state,\n        topicCodes: action.payload\n      }\n\n      case CommonActionTypes.SET_CHANNEL: \n      return {\n        ...state,\n        channel: action.payload\n      }\n    \n    case CommonActionTypes.SET_DESTINATIONS: \n      return {\n        ...state,\n        destinations: action.payload\n      }  \n\n    default:\n      return {\n        ...state\n      };\n  }\n};\n\nexport default commonReducer;\n","import { SET_FILTERS } from \"./../constants/commonConstants\";\n\nconst initialState = {\n  startDate: {\n    date: \"\",\n    minDate: null,\n    maxDate: new Date()\n  },\n  endDate: {\n    date: \"\",\n    minDate: null,\n    maxDate: new Date()\n  },\n  selectedLanguages: [],\n  selectedTopicCodes: [],\n  selectedDestinations: [],\n  selectedChannels: [],\n  selectedSampleCount: 20,\n  selectedMediaType: []\n};\n\nconst filterReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_FILTERS:\n      return {\n        ...action.payload\n      }\n    default:\n      return {\n        ...state\n      };\n  }\n}\nexport default filterReducer;","import { SET_SEARCH_RESULT } from \"./../constants/commonConstants\";\n\nconst initialState = {\n  searchResult: []\n};\n\nconst searchReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_SEARCH_RESULT:\n      return {\n        searchResult: action.payload\n      }\n    default:\n      return {\n        ...state\n      };\n  }\n}\nexport default searchReducer;","import { SET_SINGLE_RECORD } from \"./../constants/commonConstants\";\n\nconst initialState = {\n  singleResult:[]\n};\n\nconst detailViewReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_SINGLE_RECORD:\n      return {\n        ...state,\n        singleResult: action.payload\n      }\n      \n    default:\n      return {\n        ...state\n      };\n  }\n}\nexport default detailViewReducer;","import { SET_DOWNLOAD_LINK } from \"./../constants/commonConstants\";\n\nconst initialState = {\n  link: []\n};\n\nconst downloadReducer = (state = initialState, action) => {\n  \n  switch (action.type) {\n    case SET_DOWNLOAD_LINK:\n      return {\n        link: action.payload\n      }\n    default:\n      return {\n        ...state\n      };\n  }\n\n}\nexport default downloadReducer;","import { combineReducers } from \"redux\";\nimport commonReducer from \"../reducers/commonReducer\";\nimport filterReducer from \"../reducers/filterReducer\";\nimport searchReducer from \"../reducers/searchReducer\";\nimport detailViewReducer from \"../reducers/detailViewReducer\";\nimport downloadReducer from \"../reducers/downloadReducer\";\n\n\nexport default combineReducers({\n  common: commonReducer,\n  filter: filterReducer,\n  result: searchReducer,\n  singleRecord: detailViewReducer,\n  downloadLink: downloadReducer\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\n// import logger from \"redux-logger\";\nimport rootSaga from \"./saga\";\nimport reducer from \"./reducer\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(sagaMiddleware)\n  // applyMiddleware(sagaMiddleware, logger)\n);\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/index\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/reuters_connect_logo.6b616e33.svg\";"],"sourceRoot":""}